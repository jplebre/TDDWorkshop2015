{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 - TDD: write failing test, make it pass, refactor\
- Duplication is good when it gives you a clue to a pattern\
- we don\'92t start out by saying \'93this needs to be a factory\'94, we find out as we go that a factory is better\
\'97\'97\'97 by looking at code you go: Ahhh! duplication. Ahhhhh! pattern\
\
use a test as a specification for your program. A suite of tests needs to work fast, and will test all your specs to make sure it still works!\
\
\'93TDD as if you mean it\'94 book;\
\'93growing object oriented software by testing\'94 book;\
\
\
We want to see tests fail for the right reason: know the message that test sends\
\
Be verbose with unit tests. These are not API methods, so be explanatory.\
Not \'93how it does\'94 or \'93what it does\'94 but what is the intent of the test.\
\
\
Test Doubles:\
Stubs, class with test-specific implementation (gives data via hard coded information/responses)\
fake\
Mock objects allow to test drive collaboration between objects\
dummy\
\
\
//packages\
<Reference Include="Rhino.Mocks">\
      <HintPath>..\\packages\\RhinoMocks.3.6.1\\lib\\net\\Rhino.Mocks.dll</HintPath>\
    </Reference>\
    <Reference Include="nunit.framework">\
      <HintPath>..\\packages\\NUnit.2.6.4\\lib\\nunit.framework.dll</HintPath>\
    </Reference>\
}